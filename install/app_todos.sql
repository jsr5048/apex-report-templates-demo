create table app_todos (
  id           number        generated by default on null as identity (start with 1) primary key not null
, todo_owner   varchar2(60)  not null
, display_seq  number not null
, todo         varchar2(100) not null
, completed_by varchar2(60)
, completed_on date
, created_by  varchar2(60)  not null
, created_on  date          not null
, updated_by  varchar2(60)
, updated_on  date
)
enable primary key using index
/

comment on table app_todos is 'Holds users TO-DO items.'
/

--------------------------------------------------------
--  DDL for Trigger app_todos_iu
--------------------------------------------------------
create or replace trigger app_todos_iu
before insert or update
on app_todos
referencing old as old new as new
for each row
begin
  if inserting then
    :new.created_on := sysdate;
    :new.created_by := coalesce(v('APP_USER'), user);
  elsif updating then
    :new.updated_on := sysdate;
    :new.updated_by := coalesce(v('APP_USER'), user);
  end if;
end;
/
alter trigger app_todos_iu enable;

delete from app_todos;


insert into app_todos (todo_owner, display_seq, todo, completed_by) values (coalesce(v('APP_USER'), user), 10, 'Orange Juice', coalesce(v('APP_USER'), user));
insert into app_todos (todo_owner, display_seq, todo, completed_by) values (coalesce(v('APP_USER'), user), 20, 'Milk', coalesce(v('APP_USER'), user));
insert into app_todos (todo_owner, display_seq, todo, completed_by) values (coalesce(v('APP_USER'), user), 30, 'Eggs', null);
insert into app_todos (todo_owner, display_seq, todo, completed_by) values (coalesce(v('APP_USER'), user), 40, 'Bread', null);
insert into app_todos (todo_owner, display_seq, todo, completed_by) values (coalesce(v('APP_USER'), user), 50, 'Cornflakes', null);
